#pragma checksum "D:\My Project\Clothing_Store\frontend\vuapos\vuapos.Presentation\Views\Report\ReportPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "551076E874DD4E4FF0D4453A1C897E620AF96747C3F39658D33199F6790AC486"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace vuapos.Presentation.Views.Report
{
    partial class ReportPage : 
        global::Microsoft.UI.Xaml.Controls.UserControl, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_InfoBar_IsOpen(global::Microsoft.UI.Xaml.Controls.InfoBar obj, global::System.Boolean value)
            {
                obj.IsOpen = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_InfoBar_Message(global::Microsoft.UI.Xaml.Controls.InfoBar obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Message = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ProgressRing_IsActive(global::Microsoft.UI.Xaml.Controls.ProgressRing obj, global::System.Boolean value)
            {
                obj.IsActive = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_CalendarDatePicker_Date(global::Microsoft.UI.Xaml.Controls.CalendarDatePicker obj, global::System.Nullable<global::System.DateTimeOffset> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.DateTimeOffset) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.DateTimeOffset), targetNullValue);
                }
                obj.Date = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class ReportPage_obj12_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IReportPage_Bindings
        {
            private global::vuapos.Presentation.Models.Report dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Microsoft.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj12;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj13;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj14;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj15;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj16;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj13TextDisabled = false;
            private static bool isobj14TextDisabled = false;
            private static bool isobj15TextDisabled = false;
            private static bool isobj16TextDisabled = false;

            public ReportPage_obj12_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 102 && columnNumber == 48)
                {
                    isobj13TextDisabled = true;
                }
                else if (lineNumber == 106 && columnNumber == 48)
                {
                    isobj14TextDisabled = true;
                }
                else if (lineNumber == 112 && columnNumber == 48)
                {
                    isobj15TextDisabled = true;
                }
                else if (lineNumber == 118 && columnNumber == 48)
                {
                    isobj16TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 12: // Views\Report\ReportPage.xaml line 94
                        this.obj12 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target));
                        break;
                    case 13: // Views\Report\ReportPage.xaml line 102
                        this.obj13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 14: // Views\Report\ReportPage.xaml line 106
                        this.obj14 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 15: // Views\Report\ReportPage.xaml line 112
                        this.obj15 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 16: // Views\Report\ReportPage.xaml line 118
                        this.obj16 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            var rootElement = (this.obj12.Target as global::Microsoft.UI.Xaml.Controls.Grid);
                            if (rootElement != null)
                            {
                                rootElement.DataContextChanged -= this.DataContextChangedHandler;
                            }
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::vuapos.Presentation.Models.Report>(item), 1 << phase);
            }

            public void Recycle()
            {
            }

            // IReportPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::vuapos.Presentation.Models.Report>(newDataRoot);
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Microsoft.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Microsoft.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Microsoft.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Microsoft.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Microsoft.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::vuapos.Presentation.Models.Report obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_NameProduct(obj.NameProduct, phase);
                        this.Update_quantity(obj.quantity, phase);
                        this.Update_price(obj.price, phase);
                        this.Update_total(obj.total, phase);
                    }
                }
            }
            private void Update_NameProduct(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Report\ReportPage.xaml line 102
                    if (!isobj13TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj13, obj, null);
                    }
                }
            }
            private void Update_quantity(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Report\ReportPage.xaml line 106
                    if (!isobj14TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj14, obj.ToString(), null);
                    }
                }
            }
            private void Update_price(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Report\ReportPage.xaml line 112
                    if (!isobj15TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj15, (global::System.String)this.LookupConverter("CurrencyConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_total(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Report\ReportPage.xaml line 118
                    if (!isobj16TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj16, (global::System.String)this.LookupConverter("CurrencyConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class ReportPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IReportPage_Bindings
        {
            private global::vuapos.Presentation.Views.Report.ReportPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Microsoft.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.InfoBar obj2;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj3;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj4;
            private global::Microsoft.UI.Xaml.Controls.ListView obj9;
            private global::Microsoft.UI.Xaml.Controls.ProgressRing obj10;
            private global::Microsoft.UI.Xaml.Controls.CalendarDatePicker obj18;
            private global::Microsoft.UI.Xaml.Controls.CalendarDatePicker obj19;
            private global::Microsoft.UI.Xaml.Controls.Button obj20;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2IsOpenDisabled = false;
            private static bool isobj2MessageDisabled = false;
            private static bool isobj3TextDisabled = false;
            private static bool isobj4TextDisabled = false;
            private static bool isobj9ItemsSourceDisabled = false;
            private static bool isobj10IsActiveDisabled = false;
            private static bool isobj18DateDisabled = false;
            private static bool isobj19DateDisabled = false;
            private static bool isobj20CommandDisabled = false;

            private ReportPage_obj1_BindingsTracking bindingsTracking;

            public ReportPage_obj1_Bindings()
            {
                this.bindingsTracking = new ReportPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 259 && columnNumber == 18)
                {
                    isobj2IsOpenDisabled = true;
                }
                else if (lineNumber == 260 && columnNumber == 18)
                {
                    isobj2MessageDisabled = true;
                }
                else if (lineNumber == 250 && columnNumber == 32)
                {
                    isobj3TextDisabled = true;
                }
                else if (lineNumber == 233 && columnNumber == 32)
                {
                    isobj4TextDisabled = true;
                }
                else if (lineNumber == 89 && columnNumber == 31)
                {
                    isobj9ItemsSourceDisabled = true;
                }
                else if (lineNumber == 164 && columnNumber == 35)
                {
                    isobj10IsActiveDisabled = true;
                }
                else if (lineNumber == 42 && columnNumber == 33)
                {
                    isobj18DateDisabled = true;
                }
                else if (lineNumber == 51 && columnNumber == 33)
                {
                    isobj19DateDisabled = true;
                }
                else if (lineNumber == 56 && columnNumber == 21)
                {
                    isobj20CommandDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\Report\ReportPage.xaml line 259
                        this.obj2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.InfoBar>(target);
                        break;
                    case 3: // Views\Report\ReportPage.xaml line 250
                        this.obj3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 4: // Views\Report\ReportPage.xaml line 233
                        this.obj4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 9: // Views\Report\ReportPage.xaml line 89
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                        break;
                    case 10: // Views\Report\ReportPage.xaml line 164
                        this.obj10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ProgressRing>(target);
                        break;
                    case 18: // Views\Report\ReportPage.xaml line 42
                        this.obj18 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CalendarDatePicker>(target);
                        this.bindingsTracking.RegisterTwoWayListener_18(this.obj18);
                        break;
                    case 19: // Views\Report\ReportPage.xaml line 51
                        this.obj19 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CalendarDatePicker>(target);
                        this.bindingsTracking.RegisterTwoWayListener_19(this.obj19);
                        break;
                    case 20: // Views\Report\ReportPage.xaml line 55
                        this.obj20 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IReportPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::vuapos.Presentation.Views.Report.ReportPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Microsoft.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Microsoft.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Microsoft.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Microsoft.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Microsoft.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::vuapos.Presentation.Views.Report.ReportPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::vuapos.Presentation.ViewModels.ReportViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_ErrorMessage(obj.ErrorMessage, phase);
                        this.Update_ViewModel_TotalSales(obj.TotalSales, phase);
                        this.Update_ViewModel_TotalItems(obj.TotalItems, phase);
                        this.Update_ViewModel_Reports(obj.Reports, phase);
                        this.Update_ViewModel_IsLoading(obj.IsLoading, phase);
                        this.Update_ViewModel_StartDate(obj.StartDate, phase);
                        this.Update_ViewModel_EndDate(obj.EndDate, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_LoadReportCommand(obj.LoadReportCommand, phase);
                    }
                }
            }
            private void Update_ViewModel_ErrorMessage(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Report\ReportPage.xaml line 259
                    if (!isobj2IsOpenDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_InfoBar_IsOpen(this.obj2, (global::System.Boolean)this.LookupConverter("StringToBoolConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    }
                    // Views\Report\ReportPage.xaml line 259
                    if (!isobj2MessageDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_InfoBar_Message(this.obj2, obj, null);
                    }
                }
            }
            private void Update_ViewModel_TotalSales(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Report\ReportPage.xaml line 250
                    if (!isobj3TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj3, (global::System.String)this.LookupConverter("CurrencyConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_TotalItems(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Report\ReportPage.xaml line 233
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj4, obj.ToString(), null);
                    }
                }
            }
            private void Update_ViewModel_Reports(global::System.Collections.ObjectModel.ObservableCollection<global::vuapos.Presentation.Models.Report> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Reports(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Report\ReportPage.xaml line 89
                    if (!isobj9ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj9, obj, null);
                    }
                }
            }
            private void Update_ViewModel_IsLoading(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Report\ReportPage.xaml line 164
                    if (!isobj10IsActiveDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ProgressRing_IsActive(this.obj10, obj);
                    }
                }
            }
            private void Update_ViewModel_StartDate(global::System.DateTimeOffset obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Report\ReportPage.xaml line 42
                    if (!isobj18DateDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_CalendarDatePicker_Date(this.obj18, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EndDate(global::System.DateTimeOffset obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Report\ReportPage.xaml line 51
                    if (!isobj19DateDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_CalendarDatePicker_Date(this.obj19, obj, null);
                    }
                }
            }
            private void Update_ViewModel_LoadReportCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Report\ReportPage.xaml line 55
                    if (!isobj20CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj20, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_18_Date()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StartDate = (global::System.DateTimeOffset)this.obj18.Date;
                        }
                    }
                }
            }
            private void UpdateTwoWay_19_Date()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.EndDate = (global::System.DateTimeOffset)this.obj19.Date;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class ReportPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<ReportPage_obj1_Bindings> weakRefToBindingObj; 

                public ReportPage_obj1_BindingsTracking(ReportPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<ReportPage_obj1_Bindings>(obj);
                }

                public ReportPage_obj1_Bindings TryGetBindingObject()
                {
                    ReportPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_Reports(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::vuapos.Presentation.ViewModels.ReportViewModel obj = sender as global::vuapos.Presentation.ViewModels.ReportViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_ErrorMessage(obj.ErrorMessage, DATA_CHANGED);
                                bindings.Update_ViewModel_TotalSales(obj.TotalSales, DATA_CHANGED);
                                bindings.Update_ViewModel_TotalItems(obj.TotalItems, DATA_CHANGED);
                                bindings.Update_ViewModel_Reports(obj.Reports, DATA_CHANGED);
                                bindings.Update_ViewModel_IsLoading(obj.IsLoading, DATA_CHANGED);
                                bindings.Update_ViewModel_StartDate(obj.StartDate, DATA_CHANGED);
                                bindings.Update_ViewModel_EndDate(obj.EndDate, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ErrorMessage":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ErrorMessage(obj.ErrorMessage, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TotalSales":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TotalSales(obj.TotalSales, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TotalItems":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TotalItems(obj.TotalItems, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Reports":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Reports(obj.Reports, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsLoading":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsLoading(obj.IsLoading, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StartDate":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_StartDate(obj.StartDate, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EndDate":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_EndDate(obj.EndDate, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::vuapos.Presentation.ViewModels.ReportViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::vuapos.Presentation.ViewModels.ReportViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Reports(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::vuapos.Presentation.Models.Report> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::vuapos.Presentation.Models.Report>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_Reports(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::vuapos.Presentation.Models.Report> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::vuapos.Presentation.Models.Report>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::vuapos.Presentation.Models.Report> cache_ViewModel_Reports = null;
                public void UpdateChildListeners_ViewModel_Reports(global::System.Collections.ObjectModel.ObservableCollection<global::vuapos.Presentation.Models.Report> obj)
                {
                    if (obj != cache_ViewModel_Reports)
                    {
                        if (cache_ViewModel_Reports != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Reports).PropertyChanged -= PropertyChanged_ViewModel_Reports;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_Reports).CollectionChanged -= CollectionChanged_ViewModel_Reports;
                            cache_ViewModel_Reports = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Reports = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Reports;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_Reports;
                        }
                    }
                }
                public void RegisterTwoWayListener_18(global::Microsoft.UI.Xaml.Controls.CalendarDatePicker sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.CalendarDatePicker.DateProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_18_Date();
                        }
                    });
                }
                public void RegisterTwoWayListener_19(global::Microsoft.UI.Xaml.Controls.CalendarDatePicker sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.CalendarDatePicker.DateProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_19_Date();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 5: // Views\Report\ReportPage.xaml line 194
                {
                    this.ChartContainer = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 6: // Views\Report\ReportPage.xaml line 198
                {
                    this.ChartCanvas = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Canvas>(target);
                }
                break;
            case 7: // Views\Report\ReportPage.xaml line 200
                {
                    this.YAxis = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Shapes.Line>(target);
                }
                break;
            case 8: // Views\Report\ReportPage.xaml line 205
                {
                    this.XAxis = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Shapes.Line>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\Report\ReportPage.xaml line 2
                {                    
                    global::Microsoft.UI.Xaml.Controls.UserControl element1 = (global::Microsoft.UI.Xaml.Controls.UserControl)target;
                    ReportPage_obj1_Bindings bindings = new ReportPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 12: // Views\Report\ReportPage.xaml line 94
                {                    
                    global::Microsoft.UI.Xaml.Controls.Grid element12 = (global::Microsoft.UI.Xaml.Controls.Grid)target;
                    ReportPage_obj12_Bindings bindings = new ReportPage_obj12_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element12.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element12.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element12, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element12, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

